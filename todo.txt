# X	set up project:
	# X	add boilerplate files
	# X	set up repository 
	# X	publish to Github along the way
	#	create a gh-pages branch
	#	make a post-commit hook to overwrite gh-pages with master

@ 	system:
	# X	write init function for Crafty
	# X	set-up a loading and a main scene with appropriate functioning
	# X	set-up global mouse events and states extension to Crafty
	# X	massive bug, components (at least move > tick) is sharing states across entities
		Lesson learned. If you're going to use objects for internal storage for components, CLONE THEM IN INIT FIRST!
	#	make init also add necessary margins to canvas autoamtically
	#	add dependencies for custom components

@	player:
	# X	set up player entity with default components
	# X	add animated sprite, too
	# X	write custom components for movement:
		# X	a component that stores movement by units, a discrete beginning position, and a discrete end position, and a state for movement animation: move
		# X	extend that component to do the actual movement animation and also set states for movement, runs every frame
		# X	write a function to initiate directional movement so that angular movement is not possible
		# X	add an event for when movement is possible
		# X	make component out of test mouse-movement: ctrl_mouse
		# X	write a component that decides which direction the player has moved from scrolling: ctrl_scroll
	# X	wrap player entity in a nice closure
	#	implement collisions:
		# X	add collision component and a smaller-than-unit hitbox
		#	make collision with solid tiles reset movement
		#	make hook for unit-unit collisions for damage and stuff

@ X	artwork:
	# X	copy over Oryx' spritesheets
	# X	edit as necessary
	# X	split animation statically
